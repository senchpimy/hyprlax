name: AUR Packages

on:
  push:
    tags:
      - 'v*'         # publish stable when a version tag is pushed
    branches:
      - main         # update -git on pushes to main
  workflow_dispatch:  # manual trigger

concurrency:
  group: aur-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-stable:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    container: archlinux:base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install arch tooling
        run: |
          set -euxo pipefail
          pacman -Sy --noconfirm archlinux-keyring
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git openssh curl

      - name: Configure SSH for AUR
        env:
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        run: |
          set -euxo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          printf '%s\n' "$AUR_SSH_PRIVATE_KEY" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          ssh-keyscan -t rsa,ed25519 aur.archlinux.org >> ~/.ssh/known_hosts

      - name: Prepare PKGBUILD (stable)
        env:
          REPO: ${{ github.repository }}
        run: |
          set -euxo pipefail
          VERSION="${GITHUB_REF_NAME#v}"
          TARBALL_URL="https://github.com/${REPO}/archive/refs/tags/v${VERSION}.tar.gz"
          SHA256="$(curl -L "$TARBALL_URL" | sha256sum | cut -d' ' -f1)"

          git clone ssh://aur@aur.archlinux.org/hyprlax.git aur-hyprlax
          cp packaging/arch/hyprlax/PKGBUILD aur-hyprlax/PKGBUILD

          cd aur-hyprlax
          sed -i "s/^pkgver=.*/pkgver=${VERSION}/" PKGBUILD
          sed -i "s|^sha256sums=.*|sha256sums=('${SHA256}')|" PKGBUILD
          # Ensure removed optional dependency stays removed
          sed -i "/wayfire:/d" PKGBUILD

          makepkg --printsrcinfo > .SRCINFO
          echo "Stable pkgver set to: ${VERSION}"
          echo "Stable sha256: ${SHA256}"

      - name: Commit and push (stable)
        env:
          AUR_COMMIT_NAME: ${{ secrets.AUR_COMMIT_NAME }}
          AUR_COMMIT_EMAIL: ${{ secrets.AUR_COMMIT_EMAIL }}
        run: |
          set -euxo pipefail
          cd aur-hyprlax
          git config user.name "${AUR_COMMIT_NAME:-github-actions[bot]}"
          git config user.email "${AUR_COMMIT_EMAIL:-41898282+github-actions[bot]@users.noreply.github.com}"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add PKGBUILD .SRCINFO
            git commit -m "aur: hyprlax ${GITHUB_REF_NAME}"
            GIT_SSH_COMMAND="ssh -i ~/.ssh/aur -o StrictHostKeyChecking=no" git push origin master
          else
            echo "No changes to push for stable"
          fi

  publish-git:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    container: archlinux:base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install arch tooling
        run: |
          set -euxo pipefail
          pacman -Sy --noconfirm archlinux-keyring
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git openssh

      - name: Configure SSH for AUR
        env:
          AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        run: |
          set -euxo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          printf '%s\n' "$AUR_SSH_PRIVATE_KEY" > ~/.ssh/aur
          chmod 600 ~/.ssh/aur
          ssh-keyscan -t rsa,ed25519 aur.archlinux.org >> ~/.ssh/known_hosts

      - name: Prepare PKGBUILD (-git)
        id: prep_git
        run: |
          set -euxo pipefail
          REV_COUNT="$(git rev-list --count HEAD)"
          SHORT_HASH="$(git rev-parse --short HEAD)"
          PKGVER="r${REV_COUNT}.${SHORT_HASH}"
          echo "pkgver=${PKGVER}" >> "$GITHUB_OUTPUT"

          git clone ssh://aur@aur.archlinux.org/hyprlax-git.git aur-hyprlax-git
          cp packaging/arch/hyprlax-git/PKGBUILD aur-hyprlax-git/PKGBUILD
          cd aur-hyprlax-git
          sed -i "s/^pkgver=.*/pkgver=${PKGVER}/" PKGBUILD
          # Ensure removed optional dependency stays removed
          sed -i "/wayfire:/d" PKGBUILD
          makepkg --printsrcinfo > .SRCINFO
          echo "-git pkgver set to: ${PKGVER}"

      - name: Commit and push (-git)
        env:
          AUR_COMMIT_NAME: ${{ secrets.AUR_COMMIT_NAME }}
          AUR_COMMIT_EMAIL: ${{ secrets.AUR_COMMIT_EMAIL }}
        run: |
          set -euxo pipefail
          cd aur-hyprlax-git
          git config user.name "${AUR_COMMIT_NAME:-github-actions[bot]}"
          git config user.email "${AUR_COMMIT_EMAIL:-41898282+github-actions[bot]@users.noreply.github.com}"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add PKGBUILD .SRCINFO
            # Read pkgver back for log message
            PKGVER_VAL=$(bash -c 'source PKGBUILD; echo $pkgver')
            git commit -m "aur: hyprlax-git ${PKGVER_VAL}"
            GIT_SSH_COMMAND="ssh -i ~/.ssh/aur -o StrictHostKeyChecking=no" git push origin master
          else
            echo "No changes to push for -git"
          fi

